<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ring.mapper.EventMapper">
	
	<!-- 이벤트 목록 출력 -->
	<select id="eventlist" resultType="com.ring.model.EventVO">
		select e.*, 
			u.i_type,
			Concat(Replace(uploadPath,'\\','/'), '/', i_type, '_', uuid, '_' ,fileName)AS fileName
		from (
				select @rownum:=@rownum+1 rownum, event.* 
				from event, (select @rownum:=0) as tmp
				where e_type=&apos;event&apos;				
		<!-- 기간별 조회 -->
	      		<choose>
	      			<when test="sort == 'past'.toString()">
      				<![CDATA[
      				and e_end <now()
      				]]>
	      			</when>
	      			<when test="sort == 'all'.toString()">
	      			
	      			</when>
	      			<when test="sort == 'now'.toString()">
	      			<![CDATA[
	      			and (e_start <now() and e_end > now())
	      			]]>
	      			</when>
	      			<otherwise>
	      			<![CDATA[
	      			and (e_start <now() and e_end > now())
	      			]]>	      			
	      			</otherwise>
	      		</choose>									
		        order by e_no desc
		) as e join upload u
		on e.e_no = u.e_no
  	    where u.i_type=&apos;m&apos;		
		<![CDATA[
		and rownum > (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount}
		]]> 
	</select>
	
	<!-- 이벤트 건수 조회 -->
	<select id="eventTotal" resultType="int">
		select count(*) from event
		where e_type=&apos;event&apos;
	</select>

	<!-- sale 목록 출력 -->
	<select id="salelist" resultType="com.ring.model.EventVO">
		select *
		from (
				select @rownum:=@rownum+1 rownum, event.* 
				from event, (select @rownum:=0) as tmp
				where e_type=&apos;sale&apos;
		<!-- 기간별 조회 -->
	      		<choose>
	      			<when test="sort == 'past'.toString()">
      				<![CDATA[
      				and e_end <now()
      				]]>
	      			</when>
	      			<when test="sort == 'all'.toString()">
	      			
	      			</when>
	      			<when test="sort == 'now'.toString()">
	      			<![CDATA[
	      			and (e_start <now() and e_end > now())
	      			]]>
	      			</when>
	      			<otherwise>
	      			<![CDATA[
	      			and (e_start <now() and e_end > now())
	      			]]>	      			
	      			</otherwise>
	      		</choose>	
		      			         								
		        order by e_no desc		       
		) as e 
		<![CDATA[
		where rownum > (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount}
		]]> 
	</select>
	
	<!-- sale 건수 조회 -->
	<select id="saleTotal" resultType="int">
		select count(*) from event
		where e_type=&apos;sale&apos;
	</select>	
	
	<!-- 퍼레이드 목록 출력 -->
	<select id="paradelist" resultType="com.ring.model.EventVO">
		select *
		from (
				select @rownum:=@rownum+1 rownum, event.* 
				from event, (select @rownum:=0) as tmp
				where e_type=&apos;parade&apos;
		<!-- 기간별 조회 -->
	      		<choose>
	      			<when test="sort == 'past'.toString()">
      				<![CDATA[
      				and e_end <now()
      				]]>
	      			</when>
	      			<when test="sort == 'all'.toString()">
	      			
	      			</when>
	      			<when test="sort == 'now'.toString()">
	      			<![CDATA[
	      			and (e_start <now() and e_end > now())
	      			]]>
	      			</when>
	      			<otherwise>
	      			<![CDATA[
	      			and (e_start <now() and e_end > now())
	      			]]>	      			
	      			</otherwise>
	      		</choose>				
		        order by e_no desc
		) as e 
		<![CDATA[
		where rownum > (#{pageNum}-1)*#{amount} and rownum <= #{pageNum}*#{amount}
		]]> 
	</select>
	
	<!-- 퍼레이드 건수 조회 -->
	<select id="paradeTotal" resultType="int">
		select count(*) from event
		where e_type=&apos;parade&apos;
	</select>	
	
</mapper>